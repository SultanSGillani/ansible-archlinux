---
services:
 - docker:dind
stages:
 - linting
 - build_and_push
variables:
  DOCKER_DRIVER: overlay2
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  LATEST_TAG: latest
  ARCH_CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE
  ANSIBLE_LIBRARY: $ANSIBLE_LIBRARY
  ANSIBLE_VERBOSITY: $ANSIBLE_VERBOSITY
  ANSIBLE_ROLES_PATH: $ANSIBLE_ROLES_PATH
  ANSIBLE_HOST_KEY_CHECKING: $ANSIBLE_HOST_KEY_CHECKING
  ANSIBLE_LOG_PATH: $ANSIBLE_LOG_PATH
  ANSIBLE_EXECUTABLE: $ANSIBLE_EXECUTABLE
  ANSIBLE_BECOME: $ANSIBLE_BECOME
  ANSIBLE_BECOME_USER: $ANSIBLE_BECOME_USER
  ANSIBLE_PIPELINING: $ANSIBLE_PIPELINING
  ANSIBLE_INVENTORY: $ANSIBLE_INVENTORY
  ANSIBLE_INVENTORY_ENABLED: $ANSIBLE_INVENTORY_ENABLED
  TTY: xterm
cache:
  paths:
    - .cache/
    - venv/
.linting: &linting
   stage: linting
dockerfile_lint:
   <<: *linting
   image: hadolint/hadolint:latest-debian
   before_script:
      - hadolint --version
   script:
      - hadolint --config .hadolint.yaml ./Dockerfile
build_dockerfiles:
  variables:
    DOCKER_DRIVER: overlay2
  stage: build_and_push
  before_script:
      - docker version
      - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
    - echo "$CONTAINER_COMMIT_IMAGE"
    - sudo make docker-image
    - docker push $ARCH_CONTAINER_RELEASE_IMAGE:$LATEST_TAG
